# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
        auth:
          username: p2m2
          password: $DOCKERHUB_PASSWORD

      - image: tenforce/virtuoso:virtuoso7.2.5
        auth:
          username: p2m2
          password: $DOCKERHUB_PASSWORD
        environment:
          VIRT_Parameters_NumberOfBuffers: 51000
          VIRT_Parameters_MaxDirtyBuffers: 37500
          VIRT_Parameters_TN_MAX_memory: 4000000
          VIRT_Parameters_TransactionAfterImageLimit: 500000
          VIRT_SPARQL_ResultSetMaxRows: 1000
          VIRT_SPARQL_MaxDataSourceSize: 10000
          VIRT_SPARQL_MaxQueryCostEstimationTime: 0
          VIRT_SPARQL_MaxQueryExecutionTime: 0
          DBA_PASSWORD: dba
          SPARQL_UPDATE: true
          DEFAULT_GRAPH: "graph:test:discovery:default:"

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: cat /dev/null | sbt discoveryJVM/test:compile
      - run: cat /dev/null | sbt discoveryJS/test:compile

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      # run tests!
      - run: cat /dev/null | sbt clean coverage discoveryJVM/test:test

      # coverage
      - run: sbt discoveryJVM/coverageReport
      - run: bash <(curl -s https://codecov.io/bash)
      - run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report

      - store_artifacts:
          path: discovery/jvm/target/test-reports


